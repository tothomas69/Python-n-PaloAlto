#!/usr/bin/env python
import requests
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
import xml.etree.ElementTree as ET
import time
import datetime
import os

# fwkey is the API key that is generated by the firewall for the account that the
# script will impersonate. Generate an API key using the following URL to the firewall:
# https://<firewall>/api?type=keygen&user=<username>&password=<password>
# The response will be in XML and the key will be between the <key> and </key> tags
# Copy that entire key into the variable below between the quotation marks

def getConfig(fwhost, fwkey):
# Make call to firewall to get the configuration XML
  values = {'type': 'op', 'cmd': '<show><config><running></running></config></show>', 'key': fwkey}
  palocall = 'https://%s/api/' % (fwhost)
  config = requests.post(palocall, data=values, verify=False)
  return config.text

def writeBackup(config, fwname, folder):
  if not os.path.exists(folder):
    os.makedirs(folder)
# Use the values folder and fwname to create a unique timestamped folder name
  filename = "%s/%s.xml" % (folder, fwname)
  print "Configuration backup of %s complete." % (firewall["fwname"], )
  fwfile = open(filename, 'w')
  fwfile.write(config)
  fwfile.close()

def readFile():
  output = []
  file = open("firewalls.csv", "r")
  for line in file:
    if (len(line.strip()) > 0):
      fields = line.strip().split(",")
      output.append({ "fwhost": fields[0], "fwkey": fields[1], "fwname": fields[2] })
  return output

folder = datetime.datetime.fromtimestamp(time.time()).strftime('PaloAlto %Y-%m-%d-%H:%M')
fwstamp = datetime.datetime.fromtimestamp(time.time()).strftime(' %Y-%m-%d-%H:%M')

firewalls = readFile()
for firewall in firewalls:
  config = getConfig(firewall["fwhost"], firewall["fwkey"])
  writeBackup(config, firewall["fwname"] +fwstamp, folder)
print "Backup Script Complete...."
